name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - master  # or main, depending on your default branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: npm run build
        
      - name: Prepare deployment
        run: |
          # Ensure functions directory is properly set up
          mkdir -p out/_worker
          cp -r functions/* out/_worker/
          
          # Create a Functions manifest file
          echo '{"functions":[{"function":"admin/[[path]].js","pattern":"^/admin/.*$"},{"function":"index.js","pattern":"^/api$"}]}' > out/_worker/manifest.json
          
          # Zip the build output for upload
          cd out
          zip -r ../deploy.zip .
          cd ..
      
      - name: Deploy to Cloudflare Pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          # Install curl for API requests
          sudo apt-get update
          sudo apt-get install -y curl jq
          
          # Use Cloudflare API directly for deployment
          echo "Creating Cloudflare Pages deployment..."
          DEPLOY_URL=$(curl -s -X POST "https://api.cloudflare.com/client/v4/accounts/${CLOUDFLARE_ACCOUNT_ID}/pages/projects/droitfpra/deployments" \
            -H "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}" \
            -F "file=@deploy.zip" \
            -F "branch=master" | jq -r '.result.url')
            
          echo "Deployment URL: $DEPLOY_URL" 